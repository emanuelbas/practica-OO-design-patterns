TestCase subclass: #TestTwitter	instanceVariableNames: 'twitter'	classVariableNames: ''	poolDictionaries: ''	category: 'Twitter-Practica1'!!TestTwitter methodsFor: 'initialization' stamp: 'ema 4/8/2018 21:25'!setUp	twitter := Twitter new.! !Object subclass: #Tweet	instanceVariableNames: 'texto owner'	classVariableNames: ''	poolDictionaries: ''	category: 'Twitter-Practica1'!!Tweet methodsFor: 'accessing' stamp: 'ema 4/8/2018 20:51'!msj: unString	texto := unString ! !!Tweet methodsFor: 'accessing' stamp: 'ema 4/8/2018 20:56'!owner	^ owner! !!Tweet methodsFor: 'accessing' stamp: 'ema 4/8/2018 20:56'!msj	^ texto! !!Tweet methodsFor: 'accessing' stamp: 'ema 4/8/2018 20:50'!owner: unUsuario	owner := unUsuario ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Tweet class	instanceVariableNames: ''!!Tweet class methodsFor: 'instance creation' stamp: 'ema 4/8/2018 21:20'!newOwner: unUsuario Msj: unString	| nuevo |	nuevo := self new.	nuevo owner: unUsuario.	nuevo msj: unString.	^ nuevo! !Tweet subclass: #ReTweet	instanceVariableNames: 'origen'	classVariableNames: ''	poolDictionaries: ''	category: 'Twitter-Practica1'!!ReTweet methodsFor: 'accessing' stamp: 'ema 4/8/2018 21:23'!origen: unTweet	origen := unTweet ! !!ReTweet methodsFor: 'accessing' stamp: 'ema 4/8/2018 21:24'!origen	^ origen! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ReTweet class	instanceVariableNames: ''!!ReTweet class methodsFor: 'instance creation' stamp: 'ema 4/8/2018 21:23'!newOwner: unUsuario Msj: unString Origen: unTweet	| nuevo |	nuevo := self new.	nuevo owner: unUsuario.	nuevo msj: unString.	nuevo origen: unTweet.	^ nuevo! !Object subclass: #Twitter	instanceVariableNames: 'usuarios'	classVariableNames: ''	poolDictionaries: ''	category: 'Twitter-Practica1'!!Twitter methodsFor: 'initialization' stamp: 'ema 4/8/2018 20:04'!initialize	super initialize.	usuarios := Set new.! !!Twitter methodsFor: 'as yet unclassified' stamp: 'ema 4/8/2018 20:19'!BorrarUsuario: unUsuario	"Borra al usuario, dado que se pierden las referencias a sus twits también se borrarán"	"Aunque los retwit mantendrían la referencia, tengo que pregutnar eso.."		usuarios remove: unUsuario	! !!Twitter methodsFor: 'as yet unclassified' stamp: 'ema 4/8/2018 20:13'!AgregarUsuario: unUsuario	"Comprueba si no existe un usuario con el mismo nombre y lo agrega"	(self existe: unUsuario nombre)		ifFalse: [ usuarios add: unUsuario ]! !!Twitter methodsFor: 'as yet unclassified' stamp: 'ema 4/8/2018 20:09'!existe: unNombre"Devuelve true si ya existe un usuario con ese nombre"^ usuarios contains: [ :u | u nombre = unNombre ]! !Object subclass: #Usuario	instanceVariableNames: 'screenName tweets'	classVariableNames: ''	poolDictionaries: ''	category: 'Twitter-Practica1'!!Usuario methodsFor: 'initialization' stamp: 'ema 4/8/2018 21:26'!initialize	super initialize.	tweets := Set new.! !!Usuario methodsFor: 'accessing' stamp: 'ema 4/8/2018 21:27'!nombre: unNombre	screenName := unNombre ! !!Usuario methodsFor: 'accessing' stamp: 'ema 4/8/2018 21:22'!publishRT: origen	tweets add: (ReTweet newOwner: self Msj: origen msj Origen: origen).	^ true! !!Usuario methodsFor: 'accessing' stamp: 'ema 4/8/2018 20:36'!publish: unMensaje	(unMensaje size between: 1 and: 140)		ifTrue: [ tweets add: (Tweet newOwner: self Msj: unMensaje ).			^ true ]		ifFalse: [ ^ false ]! !!Usuario methodsFor: 'accessing' stamp: 'ema 4/8/2018 20:21'!nombre	^ screenName ! !