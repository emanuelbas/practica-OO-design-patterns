Object subclass: #LineRetriever	instanceVariableNames: 'filename'	classVariableNames: 'instance'	poolDictionaries: ''	category: 'Twitter-Practica4'!!LineRetriever methodsFor: 'accessing' stamp: 'ArturoZambrano 4/23/2016 15:14'!filename: anObject	filename := anObject! !!LineRetriever methodsFor: 'accessing' stamp: 'ArturoZambrano 4/23/2016 15:14'!filename	^ filename! !!LineRetriever methodsFor: 'as yet unclassified' stamp: 'ArturoZambrano 4/23/2016 15:25'!retrieveLineStartingWith: aString	| stream |	stream := filename asFileReference readStream.	[ stream atEnd ]		whileFalse: [ | header line |			line := stream nextLine.			header := line first: 10.			(header findString: aString) = 1				ifTrue: [ stream close. 					^ line ] ].	stream close.	^ nil! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!LineRetriever class	instanceVariableNames: ''!!LineRetriever class methodsFor: 'instance creation' stamp: 'ArturoZambrano 4/23/2016 15:59'!on: aFilename  instance:= self new. ^instance filename: aFilename; yourself.! !!LineRetriever class methodsFor: 'instance creation' stamp: 'ArturoZambrano 4/23/2016 15:59'!instance ^instance! !Object subclass: #UsuarioP4	instanceVariableNames: 'screenName'	classVariableNames: ''	poolDictionaries: ''	category: 'Twitter-Practica4'!!UsuarioP4 methodsFor: 'accessing' stamp: 'ema 5/1/2018 00:41'!screenName	^ SubclassResponsibility! !!UsuarioP4 methodsFor: 'accessing' stamp: 'ema 5/1/2018 00:41'!followers	^ SubclassResponsibility! !!UsuarioP4 methodsFor: 'accessing' stamp: 'ema 5/1/2018 00:40'!userName	^ SubclassResponsibility ! !UsuarioP4 subclass: #UsuarioProxy	instanceVariableNames: 'user'	classVariableNames: ''	poolDictionaries: ''	category: 'Twitter-Practica4'!!UsuarioProxy methodsFor: 'accessing' stamp: 'ema 5/1/2018 01:29'!screenName: unScreenName	screenName := unScreenName ! !!UsuarioProxy methodsFor: 'accessing' stamp: 'ema 5/1/2018 01:42'!followers	user isNil		ifTrue: [ self load ].	^ user followers! !!UsuarioProxy methodsFor: 'accessing' stamp: 'ema 5/1/2018 01:38'!load	| retriever line |	retriever := LineRetriever on: 'twitter-users.csv'.	line := retriever retrieveLineStartingWith: screenName .	user := UsuarioReal newWith: line! !!UsuarioProxy methodsFor: 'accessing' stamp: 'ema 5/1/2018 01:40'!screenName	^ screenName ! !!UsuarioProxy methodsFor: 'accessing' stamp: 'ema 5/1/2018 01:42'!userName	user isNil ifTrue: [ self load ].	^ user userName! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!UsuarioProxy class	instanceVariableNames: ''!!UsuarioProxy class methodsFor: 'instance creation' stamp: 'ema 5/1/2018 01:29'!newSN: unScreenName	| proxy |	proxy := self new.	proxy screenName: unScreenName.	^ proxy! !UsuarioP4 subclass: #UsuarioReal	instanceVariableNames: 'userName followers'	classVariableNames: ''	poolDictionaries: ''	category: 'Twitter-Practica4'!!UsuarioReal methodsFor: 'accessing' stamp: 'ema 5/1/2018 01:20'!screenName: aSName.	screenName := aSName ! !!UsuarioReal methodsFor: 'accessing' stamp: 'ema 5/1/2018 01:32'!followers	^ followers! !!UsuarioReal methodsFor: 'accessing' stamp: 'ema 5/1/2018 01:27'!generarFollowers: followerSNCollection	followers := followerSNCollection collect: [ :sn | UsuarioProxy newSN: sn ] ! !!UsuarioReal methodsFor: 'accessing' stamp: 'ema 5/1/2018 01:31'!screenName	^ screenName ! !!UsuarioReal methodsFor: 'accessing' stamp: 'ema 5/1/2018 01:31'!userName	^ userName ! !!UsuarioReal methodsFor: 'accessing' stamp: 'ema 5/1/2018 01:20'!userName: aUser	userName := aUser ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!UsuarioReal class	instanceVariableNames: ''!!UsuarioReal class methodsFor: 'instance creation' stamp: 'ema 5/1/2018 01:50'!newWith: unaLineaCSV	| user splitSName splitUser splitFollowers dataArray |	dataArray := (unaLineaCSV splitOn: ',') removeAllSuchThat: [ :ea | ea = '' ].	splitSName := dataArray at: 1.	splitUser := dataArray at: 2.	dataArray		removeFirst;		removeFirst.	splitFollowers := dataArray.	user := self new.	user screenName: splitSName.	user userName: splitUser.	user generarFollowers: splitFollowers.	^ user! !